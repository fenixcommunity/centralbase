#App
server:
  port: 8088
  address: 127.0.0.1
  tomcat:
    max-threads: 200
    connection-timeout: 5s
    max-swallow-size: 2MB  #The maximum size of a request body:
    accesslog:
      enabled: true
      directory: C:/projects/MK/centralspace-temp/tomcat-logs
      file-date-format: yyyy-MM-dd
      prefix: access_log
      suffix: .log
  #  ssl:
#    enabled: true
#    protocol: TLS
#    key-store-password: ..
#    key-store-type: ...
#    key-store: ...
#    key-alias: ...
  servlet:
    context-path: /app
    session:
      trackingModes: COOKIE
      cookie:
        name: contralspace-app
        http-only: true
#       domain: www.centralspace.com
#       secure: true
        maxAge:  259200  #3 days -> 3*24*60*60
  host: http://localhost:${server.port}
  error:
    whitelabel:
      enabled: false
    path: /centralspace-error
    include-exception: true
    include-stacktrace: always

centralspace-view:
  port: 7773
  origin: http://localhost:${centralspace-view.port}

#Spring
spring:
  boot:
    admin:
      contextPath: admin-panel
      notify:
        mail:
          to: fenixcommunity.it@gmail.com
      client:
        enabled: false # false - conflicts with current actuator instance
        url: localhost:8033
        username: admin
        password: password
        instance:
          metadata:
            user:
              name: admin # ${spring.security.user.name}
              password: password # password: ${spring.security.user.password}
  servlet:
    multipart:
      enabled: true
  jpa:
    open-in-view: false
    properties:
      hibernate:
        enable_lazy_load_no_trans: true
  codec:
        max-in-memory-size: 10MB
  jackson:
    time-zone: Europe/Dublin
    date-format: yyyy-MM-dd HH:mm:ss
#HOT SWAP -> if standard changes CTR + SHIFT + F9, if method adding use hot swap
  devtools:
    restart:
      enabled: true

#Base paths
path:
  app: ${server.servlet.context-path}
  api: /api
  rest: ${server.host}${path.app}${path.api}
  resource: ${path.rest}/resource-cache

#H2 console
h2-console:
  host: ${server.host}

#Swagger console
springfox:
  documentation:
    swagger:
      v2:
        path: /swagger
  swagger2:
    host: ${server.host}

#Actuator console
actuator:
  swagger:
    fix:
      enabled: true
  host: ${server.host}

management:
  endpoints:
    web:
      exposure:
        include: "*"
        exclude: restart, refresh
  endpoint:
    restart:
      enabled: true
    refresh:
      enabled: true
    health:
      show-details: always

springdoc:
  show:
    actuator: true

#Prometheus metrics
prometheus:
  endpoint: /prometheus
  port: 8887
  user: admin
  password: password
  url: http://localhost:${prometheus.port}${prometheus.endpoint}

#Aop
aop:
  config:
    enabled: true

#Sftp connection
remoteserver:
    knownHosts: /Jboss/server/.ssh/known_hosts
    host: m.example.com
    username: username
    password: password
    remoteFileDirection: remote_sftp/

#Analyze VM:
#https://www.baeldung.com/native-memory-tracking-in-jvm

#Web settings
web:
  downloadFileTimeout: 5000

#GraphQl
graphql:
  servlet:
#   mapping: /api/graphql -> we use custom endpoint to handle request
    enabled: true
    corsEnabled: true
  tools:
    schemaLocationPattern: "**/*.graphqls"
graphiql:
  mapping: /graphiql
  endpoint: /api/graphql/query
  urlPath: ${server.host}${path.app}${graphiql.mapping}

